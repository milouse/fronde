# frozen_string_literal: true

module Fronde
  # Contains method to generate URL compatible strings
  module Slug
    class << self
      def slug(title)
        title.downcase
             .encode('ascii', fallback: ->(k) { translit(k) })
             .encode('utf-8') # Convert back to utf-8 string
             .gsub(/[^\w-]/, '-')
             .squeeze('-')
             .delete_suffix('-')
      end

      # rubocop:disable Metrics/CyclomaticComplexity
      # rubocop:disable Metrics/MethodLength
      def translit(char)
        case char
        when '√°', '√†', '√¢', '√§', '«é', '√£', '√•'
          'a'
        when '√©', '√®', '√™', '√´', 'ƒõ', '·∫Ω', '‚Ç¨'
          'e'
        when '√≠', '√¨', '√Æ', '√Ø', '«ê', 'ƒ©'
          'i'
        when '√≥', '√≤', '√¥', '√∂', '«í', '√µ', '√∏'
          'o'
        when '√∫', '√π', '√ª', '√º', '«î', '≈©'
          'u'
        when '√Ω', '·ª≥', '≈∑', '√ø', '·ªπ'
          'y'
        when '√ß', '¬©', 'üÑØ'
          'c'
        when '√±'
          'n'
        when '√ü'
          'ss'
        when '≈ì'
          'oe'
        when '√¶'
          'ae'
        when '¬Æ'
          'r'
        when '‚Ñ¢'
          'tm'
        else
          '-'
        end
      end
      # rubocop:enable Metrics/CyclomaticComplexity
      # rubocop:enable Metrics/MethodLength
    end
  end
end
